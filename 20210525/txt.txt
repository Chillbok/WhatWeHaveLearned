1. 입출력
- 입력, 출력
- C: stdio.h - 인클루드(포함)
- C++: iostream.h - 인클루드
- i = input, o = output

C에서의 입출력

출력: printf("서식문자", 출력할 내용)

서식문자(서식 지정자)
- %? - ?에 들어가는 형태에 따라서 출력하는 내용을 변경해주어야 한다.

자주 쓰는 ?의 종류
s: 문자열을 출력할 때 사용.(문자열)
d, i: 십진수형 정수를 출력할 때 사용.
f: 십진수형 실수를 출력할 때 사용.


변수명
- 알아보기 쉽게 대충 지어라...
- 표기법 - 헝가리안, 카멜

헝가리안: 변수명 앞에 변수의 자료형을 뜻하는 문자를 붙여서 표시하는 법
정수형: i, n
실수형: f
문자열: sz, str







컴퓨터에서 모든 수는 2진수이고 한자리는 1비트입니다.
비트 연산자는 이 비트 단위로 특정한 연산을 수행합니다.


&: 값이 모두 1이면 1을 반환.
|: 값 중에서 하나라도 1이면 1을 반환
^: 두개가 다르면 1. 같으면 0.
~: 있다라는 정도만 알아두자.

?: 삼항 연산자 --> 간단하게 처리할 수 있는 if문 대용으로 사용.
값을 담을 변수 = (조건식) ? 조건식이 true일때 : 조건식이 false일때

struct Number;
{
    int str;
}
Number num;

num.str

cout << (1 > 0)?"hello":"world" << endl;
값을 담을 변수 = (조건식)
,: 쉼표 연산자
sizeof: 바이트 수 변환



구조체)
1. 구조체: 사용자 정의 타입. 내가 원하는대로 만들 수 있다.
- 같은 타입으로만 구성할 수도 있고, 다르게 구성할 수도 있고.
- 배열은 같은 자료형의 변수의 집합이라고 한다면, 구조체는 타양한 타입의 변수의 집합
C: 변수만, C++: 함수도 가능


구조체의 중요성)
1. 클래스의 기초가 된다.


구조체는 변수와 다르게 생성 --> 선언 --> 사용
                     생성 --> 사용
변수: 선언 --> 사용


구조체의 생성)
struct 예약어를 사용해 생성한다.
struct 구조체명(헝가리안 표기법은 tag)
{
    중괄호 안에 변수들 생성
}; --> 이 세미콜론이 중요함.

for/if와 같이 다른 곳에서는 세미콜론을 안붙이기 때문에 놓치는 경우가 많다.



용어)
- 중괄호 안에 생성한 변수들을 해당 구조체의 멤버라고 한다.
- 멤버 변수는 헝가리안 표기법(m_클래스에서만 사용)

//구조체는 생성 --> 선언 --> 사용
//구조체 생성
struct tagNumber
{
    //여기에 다양한 변수들을 넣는다.

    string Str = ;
}

구조체 선언)
생성한(혹은 된) 구조체 명 (띄고) 구조체변수명;
--> 생성할 때 사용자가 정의할 수도 있지만, 미리 만들어져 있는 구조체도 있다.
미리 생성되어 있는 구조체: 바로 선언하고 사용.
사용자 정의 자료형 구조체: 생성부터 하고 선언 후 사용.

//선언
미리 생성되어 있는 구조체: 바로 선언하고 사용.
예시:
tagNumber num;
RECT rect;//rect.(left, right, top, bottom/이 외에도 있지만, 거의 쓰이지 않는다.)
POINT pt;//pt.(x, y)
사용자 정의 자료형 구조체: 생성부터 하고 선언 후 사용.

//생성한(혹은 된) 구조체 명 (띄고) 구조체변수명;


구조체 사용)
변수처럼 사용하면 된다.
//구조체변수명. 구조체에 포함된 멤버변수명
. : 참조연산자

num.str = "helloworld";
cout << num.str << endl;