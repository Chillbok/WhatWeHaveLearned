/*
*.h가 붙는 파일을 헤더파일이라고 부른다.
    윈도우키 누르고 파일 검색하는 법
    *: 모든 것
    예시)
    *.h --> .h가 붙는 모든 파일 검색

기본적으로 만들어져 있는 헤더파일을 #include 해서 사용하면 됨.

//어째서 사용하는가?
    자주 사용하지만 내용이 긴 코드들을 미리 정의해놓고 사용할 수 있기 때문이다.
    우리가 자주 사용했던 cin, cout 등이 여기에 포함된다.
    긴 코드들을 미리 헤더 파일로 만들어놓음으로써 단 세 네 줄짜리 단어로 70줄짜리 코드를 사용할 수 있는 것이다.

//사용법
    #include "*.h"
        - 여기에서 *는 헤더 파일의 이름을 의미한다.
    파일의 맨 윗줄에 작성하여 사용한다.
    한 번 만든 헤더파일은 해당 프로젝트의 모든 cpp 파일(소스 파일)에서 사용할 수 있다.


//만들어두는 내용
    보통 미리 만들어두는 내용은 무엇이 있을까?
    어디에서든 사용할 수 있다는 것은 변하지 않아야 하는 것이다.
    자주 사용하는 내용은 다음과 같다.
        1. 인클루드해야 하는 헤더
        2. 상수의 정의, 전역변수
            - 변수만 상수, 전역변수, 정적변수, 지역변수
        3. 함수 오버로딩
        4. 열거문
        5. 클래스 오버로딩
        6. 구조체

//중요한 내용
    1. 함수는 메인함수 외에 n개를 생성해서 사용할 수 있다.
    2. 전역 변수는 함수 밖에 선언한다.
        헤더 안에 선언한다는 것은 전역변수를 선언하는 것이다.
    3. 정적변수, 지역변수는 함수 안에 선언한다.


//전역변수의 장점과 단점
장점)
    편하다.
단점)
    메모리 사용량이 높다.
    디버깅(버그 잡기)이 힘들다.
    에러 수정이 힘들다.

//변수의 종류
전역, 정적, 지역변수
메모리 저장공간 초기화 되는 타이밍에 의해서 구분한다.
    지역변수: 함수 안에 선언, 함수가 끝나면 초기화
    전역변수: 
*/